[project]
name = "better-ssh"
version = "0.1.0"
description = "CLI tool for managing SSH connections with interactive menu and password management"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Alexander Blinov", email = "iam@blinovcorp.ru"}
]
keywords = ["ssh", "cli", "terminal", "password-manager", "interactive"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
dependencies = [
    "typer>=0.12.3",
    "rich>=13.7.1",
    "platformdirs>=4.3.6",
    "pydantic>=2.9.2",
    "inquirerpy>=0.3.4",
    "pyperclip>=1.9.0",
    "cryptography>=43.0.0",
]

[project.urls]
Homepage = "https://github.com/aa-blinov/better-ssh"
Repository = "https://github.com/aa-blinov/better-ssh"
Issues = "https://github.com/aa-blinov/better-ssh/issues"

[dependency-groups]
dev = [
    "ruff>=0.8.4",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "coverage[toml]>=7.6.0",
]

[project.scripts]
better-ssh = "app.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]



[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--strict-markers",
    "--tb=short",
]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/__pycache__/*", "*/site-packages/*", "*/.venv/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
