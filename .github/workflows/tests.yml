name: Tests

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test (${{ matrix.os }}, Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        enable-cache: true
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --all-extras --dev
    
    - name: Run linter
      run: uv run ruff check app tests
    
    - name: Check code formatting
      run: uv run ruff format --check app tests
    
    - name: Run tests with coverage
      run: uv run pytest --cov=app --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Generate coverage badge
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      run: |
        coverage_percent=$(uv run coverage report | grep TOTAL | awk '{print $NF}' | sed 's/%//')
        echo "COVERAGE=$coverage_percent" >> $GITHUB_ENV
    
    - name: Test summary
      if: always()
      run: |
        echo "### Test Results :test_tube:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **OS**: ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Python**: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  lint-docs:
    name: Lint documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Lint Markdown files
      uses: DavidAnson/markdownlint-cli2-action@v18
      with:
        globs: '**/*.md'
        config: '.markdownlint.json'
      continue-on-error: true
